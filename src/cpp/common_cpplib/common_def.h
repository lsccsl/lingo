/*! @file <文件名>
********************************************************************************
<PRE>
模块名       : dbt
文件名       : common_def.h
相关文件     : 
文件实现功能 : 常用宏定义
作者         : linsc
版本         : 1.0
--------------------------------------------------------------------------------
备注         : 
--------------------------------------------------------------------------------
修改记录 : 
日 期        版本     修改人              修改内容
2009/05/21   1.0      linsc               create
</PRE>
*******************************************************************************/

#ifndef __COMMON_DEF_H__
#define __COMMON_DEF_H__

#define IN
#define OUT

/**
* @brief 将一个逆序数组(低位高字节)存入uint64
*/
#define ARRAY_TO_UINT64(__u64, __a, __asz) do{\
	assert((__asz) >= 8);\
	(__u64) = (((__a)[0] << 24) | ((__a)[1] << 16) | ((__a)[2] << 8) | ((__a)[3]));\
	(__u64) = ((__u64) << 32);\
	(__u64) |= ((((__a)[4] << 24) | ((__a)[5] << 16) | ((__a)[6] << 8) | ((__a)[7])) & 0xffffffff);\
}while(0)

/**
* @brief 将一个uint64存成逆序(低位高字节)
*/
#define UINT64_TO_ARRAY(__u64, __a, __asz) do{\
	assert((__asz) >= 8);\
	(__a)[0] = uint8(((__u64)>>56) & 0xff);\
	(__a)[1] = uint8(((__u64)>>48) & 0xff);\
	(__a)[2] = uint8(((__u64)>>40) & 0xff);\
	(__a)[3] = uint8(((__u64)>>32) & 0xff);\
	(__a)[4] = uint8(((__u64)>>24) & 0xff);\
	(__a)[5] = uint8(((__u64)>>16) & 0xff);\
	(__a)[6] = uint8(((__u64)>>8) & 0xff);\
	(__a)[7] = uint8((__u64) & 0xff);\
}while(0)

/**
* @brief 将一个逆序数据存入uint32
*/
#define ARRAY_TO_UINT32(__u32, __a, __asz) do{\
	assert((__asz) >= 4);\
	(__u32) = ((__a)[0]<<24) | ((__a)[1]<<16) | ((__a)[2]<<8) | (__a)[3];\
}while(0)

/**
* @brief 将一个uint32存成逆序
*/
#define UINT32_TO_ARRAY(__u32, __a, __asz) do{\
	assert((__asz) >= 4);\
	(__a)[0] = ((__u32)>>24) & 0xff;\
	(__a)[1] = ((__u32)>>16) & 0xff;\
	(__a)[2] = ((__u32)>>8) & 0xff;\
	(__a)[3] = (__u32) & 0xff;\
}while(0)

/**
* @brief 将一个逆序数据存入uint16
*/
#define ARRAY_TO_UINT16(__u16, __a, __asz) do{\
	assert((__asz) >= 2);\
	(__u16) = ((__a)[0]<<8) | (__a)[1];\
}while(0)

/**
* @brief 将一个uint16存成逆序
*/
#define UINT16_TO_ARRAY(__u16, __a, __asz) do{\
	assert((__asz) >= 2);\
	(__a)[0] = ((__u16)>> 8) & 0xff; \
	(__a)[1] = (__u16) & 0xff; \
}while(0)

#endif

