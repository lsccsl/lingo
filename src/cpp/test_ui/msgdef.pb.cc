// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgdef.proto

#include "msgdef.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace msgpacket {
}  // namespace msgpacket
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_msgdef_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_msgdef_2eproto = nullptr;
const uint32_t TableStruct_msgdef_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_msgdef_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014msgdef.proto\022\tmsgpacket*\327\010\n\013PB_MSG_TYP"
  "E\022\026\n\022_PB_MSG_INTER_NULL\020\000\022$\n _PB_MSG_INT"
  "ER_QUECENTER_REGISTER\020\001\022(\n$_PB_MSG_INTER"
  "_QUECENTER_REGISTER_RES\020\002\022\'\n#_PB_MSG_INT"
  "ER_QUECENTER_OFFLINE_NTF\020\003\022&\n\"_PB_MSG_IN"
  "TER_QUECENTER_ONLINE_NTF\020\004\022 \n\034_PB_MSG_IN"
  "TER_QUESRV_CONNECT\020\005\022$\n _PB_MSG_INTER_QU"
  "ESRV_CONNECT_RES\020\006\022%\n!_PB_MSG_INTER_QUEC"
  "ENTER_HEARTBEAT\020\007\022)\n%_PB_MSG_INTER_QUECE"
  "NTER_HEARTBEAT_RES\020\010\022\"\n\036_PB_MSG_INTER_QU"
  "ESRV_HEARTBEAT\020\t\022&\n\"_PB_MSG_INTER_QUESRV"
  "_HEARTBEAT_RES\020\n\022*\n&_PB_MSG_INTER_CLISRV"
  "_REG_MSGQUE_CENTER\020\013\022.\n*_PB_MSG_INTER_CL"
  "ISRV_REG_MSGQUE_CENTER_RES\020\014\022\"\n\036_PB_MSG_"
  "INTER_CLISRV_HEARTBEAT\020\r\022&\n\"_PB_MSG_INTE"
  "R_CLISRV_HEARTBEAT_RES\020\016\022#\n\037_PB_MSG_INTE"
  "R_CLISRV_REG_TO_QUE\020\017\022\'\n#_PB_MSG_INTER_C"
  "LISRV_REG_TO_QUE_RES\020\020\022)\n%_PB_MSG_INTER_"
  "QUESRV_REPORT_BROADCAST\020\021\022\034\n\030_PB_MSG_INT"
  "ER_QUESRV_NTF\020\022\022\025\n\021_PB_MSG_INTER_MSG\020\036\022\031"
  "\n\025_PB_MSG_INTER_MSG_RES\020\037\022$\n _PB_MSG_INT"
  "ER_QUESRV_GET_SRVTYPE\020 \022(\n$_PB_MSG_INTER"
  "_QUESRV_GET_SRVTYPE_RES\020!\022\026\n\021_PB_MSG_INT"
  "ER_MAX\020\350\007\022&\n!_PB_MSG_CENTERSRV_GAMESRV_G"
  "ETINFO\020\351\007\022*\n%_PB_MSG_CENTERSRV_GAMESRV_G"
  "ETINFO_RES\020\352\007\022%\n _PB_MSG_LOGONSRV_CENTER"
  "SRV_LOGON\020\353\007\022)\n$_PB_MSG_LOGONSRV_CENTERS"
  "RV_LOGON_RES\020\354\007\022\022\n\r_PB_MSG_LOGON\020\321\017\022\026\n\021_"
  "PB_MSG_LOGON_RES\020\322\017*\315\001\n\020PB_RESPONSE_CODE"
  "\022\031\n\025PB_RESPONSE_CODE_Fail\020\000\022\027\n\023PB_RESPON"
  "SE_CODE_OK\020\001\022#\n\037PB_RESPONSE_CODE_Rpc_not"
  "_accept\020\002\022\035\n\031PB_RESPONSE_CODE_redirect\020\003"
  "\022\037\n\033PB_RESPONSE_CODE_no_que_srv\020\004\022 \n\034PB_"
  "RESPONSE_CODE_no_srv_uuid\020\005B\016Z\014./;msgpac"
  "ketb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_msgdef_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msgdef_2eproto = {
  false, false, 1371, descriptor_table_protodef_msgdef_2eproto, "msgdef.proto", 
  &descriptor_table_msgdef_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_msgdef_2eproto::offsets,
  nullptr, file_level_enum_descriptors_msgdef_2eproto, file_level_service_descriptors_msgdef_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_msgdef_2eproto_getter() {
  return &descriptor_table_msgdef_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_msgdef_2eproto(&descriptor_table_msgdef_2eproto);
namespace msgpacket {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PB_MSG_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msgdef_2eproto);
  return file_level_enum_descriptors_msgdef_2eproto[0];
}
bool PB_MSG_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 30:
    case 31:
    case 32:
    case 33:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 2001:
    case 2002:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PB_RESPONSE_CODE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msgdef_2eproto);
  return file_level_enum_descriptors_msgdef_2eproto[1];
}
bool PB_RESPONSE_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgpacket
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
