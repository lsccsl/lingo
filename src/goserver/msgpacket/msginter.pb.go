// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.1
// source: msginter.proto

package msgpacket

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PB_SRV_INFO_ONE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuid int64 `protobuf:"varint,1,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
	SrvType int32 `protobuf:"varint,2,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
}

func (x *PB_SRV_INFO_ONE) Reset() {
	*x = PB_SRV_INFO_ONE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_SRV_INFO_ONE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_SRV_INFO_ONE) ProtoMessage() {}

func (x *PB_SRV_INFO_ONE) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_SRV_INFO_ONE.ProtoReflect.Descriptor instead.
func (*PB_SRV_INFO_ONE) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{0}
}

func (x *PB_SRV_INFO_ONE) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

func (x *PB_SRV_INFO_ONE) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

type PB_SRV_INFO_ALL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArraySrv []*PB_SRV_INFO_ONE `protobuf:"bytes,1,rep,name=array_srv,json=arraySrv,proto3" json:"array_srv,omitempty"`
}

func (x *PB_SRV_INFO_ALL) Reset() {
	*x = PB_SRV_INFO_ALL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_SRV_INFO_ALL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_SRV_INFO_ALL) ProtoMessage() {}

func (x *PB_SRV_INFO_ALL) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_SRV_INFO_ALL.ProtoReflect.Descriptor instead.
func (*PB_SRV_INFO_ALL) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{1}
}

func (x *PB_SRV_INFO_ALL) GetArraySrv() []*PB_SRV_INFO_ONE {
	if x != nil {
		return x.ArraySrv
	}
	return nil
}

// msg que srv register to msg center
type PB_MSG_INTER_QUECENTER_REGISTER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId    int64            `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
	Ip          string           `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port        int32            `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	LocalAllSrv *PB_SRV_INFO_ALL `protobuf:"bytes,4,opt,name=local_all_srv,json=localAllSrv,proto3" json:"local_all_srv,omitempty"`
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER) Reset() {
	*x = PB_MSG_INTER_QUECENTER_REGISTER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUECENTER_REGISTER) ProtoMessage() {}

func (x *PB_MSG_INTER_QUECENTER_REGISTER) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUECENTER_REGISTER.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUECENTER_REGISTER) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{2}
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER) GetLocalAllSrv() *PB_SRV_INFO_ALL {
	if x != nil {
		return x.LocalAllSrv
	}
	return nil
}

type PB_MSG_INTER_QUESRV_INFO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId int64  `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
	Ip       string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port     int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_INFO) Reset() {
	*x = PB_MSG_INTER_QUESRV_INFO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_INFO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_INFO) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_INFO) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_INFO.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_INFO) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{3}
}

func (x *PB_MSG_INTER_QUESRV_INFO) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

func (x *PB_MSG_INTER_QUESRV_INFO) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PB_MSG_INTER_QUESRV_INFO) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PB_MSG_INTER_QUECENTER_REGISTER_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvInfo []*PB_MSG_INTER_QUESRV_INFO `protobuf:"bytes,1,rep,name=que_srv_info,json=queSrvInfo,proto3" json:"que_srv_info,omitempty"`
	QueSrvId   int64                       `protobuf:"varint,2,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER_RES) Reset() {
	*x = PB_MSG_INTER_QUECENTER_REGISTER_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUECENTER_REGISTER_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_QUECENTER_REGISTER_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUECENTER_REGISTER_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUECENTER_REGISTER_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{4}
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER_RES) GetQueSrvInfo() []*PB_MSG_INTER_QUESRV_INFO {
	if x != nil {
		return x.QueSrvInfo
	}
	return nil
}

func (x *PB_MSG_INTER_QUECENTER_REGISTER_RES) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

// msg center notfiy msg que srv the other msg que srv online/offline
type PB_MSG_INTER_QUECENTER_OFFLINE_NTF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId int64 `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
}

func (x *PB_MSG_INTER_QUECENTER_OFFLINE_NTF) Reset() {
	*x = PB_MSG_INTER_QUECENTER_OFFLINE_NTF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUECENTER_OFFLINE_NTF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUECENTER_OFFLINE_NTF) ProtoMessage() {}

func (x *PB_MSG_INTER_QUECENTER_OFFLINE_NTF) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUECENTER_OFFLINE_NTF.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUECENTER_OFFLINE_NTF) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{5}
}

func (x *PB_MSG_INTER_QUECENTER_OFFLINE_NTF) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

type PB_MSG_INTER_QUECENTER_ONLINE_NTF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvInfo *PB_MSG_INTER_QUESRV_INFO `protobuf:"bytes,1,opt,name=que_srv_info,json=queSrvInfo,proto3" json:"que_srv_info,omitempty"`
}

func (x *PB_MSG_INTER_QUECENTER_ONLINE_NTF) Reset() {
	*x = PB_MSG_INTER_QUECENTER_ONLINE_NTF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUECENTER_ONLINE_NTF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUECENTER_ONLINE_NTF) ProtoMessage() {}

func (x *PB_MSG_INTER_QUECENTER_ONLINE_NTF) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUECENTER_ONLINE_NTF.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUECENTER_ONLINE_NTF) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{6}
}

func (x *PB_MSG_INTER_QUECENTER_ONLINE_NTF) GetQueSrvInfo() *PB_MSG_INTER_QUESRV_INFO {
	if x != nil {
		return x.QueSrvInfo
	}
	return nil
}

// msg que srv connect to each other
type PB_MSG_INTER_QUESRV_CONNECT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId    int64            `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
	LocalAllSrv *PB_SRV_INFO_ALL `protobuf:"bytes,2,opt,name=local_all_srv,json=localAllSrv,proto3" json:"local_all_srv,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_CONNECT) Reset() {
	*x = PB_MSG_INTER_QUESRV_CONNECT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_CONNECT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_CONNECT) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_CONNECT) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_CONNECT.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_CONNECT) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{7}
}

func (x *PB_MSG_INTER_QUESRV_CONNECT) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

func (x *PB_MSG_INTER_QUESRV_CONNECT) GetLocalAllSrv() *PB_SRV_INFO_ALL {
	if x != nil {
		return x.LocalAllSrv
	}
	return nil
}

type PB_MSG_INTER_QUESRV_CONNECT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId    int64            `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
	LocalAllSrv *PB_SRV_INFO_ALL `protobuf:"bytes,2,opt,name=local_all_srv,json=localAllSrv,proto3" json:"local_all_srv,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_CONNECT_RES) Reset() {
	*x = PB_MSG_INTER_QUESRV_CONNECT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_CONNECT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_CONNECT_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_CONNECT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_CONNECT_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_CONNECT_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{8}
}

func (x *PB_MSG_INTER_QUESRV_CONNECT_RES) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

func (x *PB_MSG_INTER_QUESRV_CONNECT_RES) GetLocalAllSrv() *PB_SRV_INFO_ALL {
	if x != nil {
		return x.LocalAllSrv
	}
	return nil
}

// msg que srv heartbeat to msg center
type PB_MSG_INTER_QUECENTER_HEARTBEAT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId int64 `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT) Reset() {
	*x = PB_MSG_INTER_QUECENTER_HEARTBEAT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUECENTER_HEARTBEAT) ProtoMessage() {}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUECENTER_HEARTBEAT.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUECENTER_HEARTBEAT) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{9}
}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

type PB_MSG_INTER_QUECENTER_HEARTBEAT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId int64 `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT_RES) Reset() {
	*x = PB_MSG_INTER_QUECENTER_HEARTBEAT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUECENTER_HEARTBEAT_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUECENTER_HEARTBEAT_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUECENTER_HEARTBEAT_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{10}
}

func (x *PB_MSG_INTER_QUECENTER_HEARTBEAT_RES) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

// msg que srv heartbeat to the other msg que srv
type PB_MSG_INTER_QUESRV_HEARTBEAT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId int64 `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT) Reset() {
	*x = PB_MSG_INTER_QUESRV_HEARTBEAT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_HEARTBEAT) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_HEARTBEAT.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_HEARTBEAT) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{11}
}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

type PB_MSG_INTER_QUESRV_HEARTBEAT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId int64 `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT_RES) Reset() {
	*x = PB_MSG_INTER_QUESRV_HEARTBEAT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_HEARTBEAT_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_HEARTBEAT_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_HEARTBEAT_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{12}
}

func (x *PB_MSG_INTER_QUESRV_HEARTBEAT_RES) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

// client srv register to msg center
type PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvType int32 `protobuf:"varint,1,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
	SrvUuid int64 `protobuf:"varint,2,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER) Reset() {
	*x = PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER) ProtoMessage() {}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{13}
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

type PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res        PB_RESPONSE_CODE `protobuf:"varint,1,opt,name=res,proto3,enum=msgpacket.PB_RESPONSE_CODE" json:"res,omitempty"`
	SrvUuid    int64            `protobuf:"varint,2,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
	QueSrvId   int64            `protobuf:"varint,3,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
	QueSrvIp   string           `protobuf:"bytes,4,opt,name=que_srv_ip,json=queSrvIp,proto3" json:"que_srv_ip,omitempty"`
	QueSrvPort int32            `protobuf:"varint,5,opt,name=que_srv_port,json=queSrvPort,proto3" json:"que_srv_port,omitempty"`
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) Reset() {
	*x = PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{14}
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) GetRes() PB_RESPONSE_CODE {
	if x != nil {
		return x.Res
	}
	return PB_RESPONSE_CODE_PB_RESPONSE_CODE_Fail
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) GetQueSrvIp() string {
	if x != nil {
		return x.QueSrvIp
	}
	return ""
}

func (x *PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES) GetQueSrvPort() int32 {
	if x != nil {
		return x.QueSrvPort
	}
	return 0
}

// client srv heartbeat to msg que srv
type PB_MSG_INTER_CLISRV_HEARTBEAT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuid int64 `protobuf:"varint,1,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT) Reset() {
	*x = PB_MSG_INTER_CLISRV_HEARTBEAT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_CLISRV_HEARTBEAT) ProtoMessage() {}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_CLISRV_HEARTBEAT.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_CLISRV_HEARTBEAT) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{15}
}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

type PB_MSG_INTER_CLISRV_HEARTBEAT_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuid int64 `protobuf:"varint,1,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT_RES) Reset() {
	*x = PB_MSG_INTER_CLISRV_HEARTBEAT_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_CLISRV_HEARTBEAT_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_CLISRV_HEARTBEAT_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_CLISRV_HEARTBEAT_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{16}
}

func (x *PB_MSG_INTER_CLISRV_HEARTBEAT_RES) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

// client srv msg
type PB_MSG_INTER_MSG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuidFrom     int64  `protobuf:"varint,1,opt,name=srv_uuid_from,json=srvUuidFrom,proto3" json:"srv_uuid_from,omitempty"`
	SrvUuidTo       int64  `protobuf:"varint,2,opt,name=srv_uuid_to,json=srvUuidTo,proto3" json:"srv_uuid_to,omitempty"`
	SrvType         int32  `protobuf:"varint,3,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
	MsgType         int32  `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	MsgBin          []byte `protobuf:"bytes,5,opt,name=msg_bin,json=msgBin,proto3" json:"msg_bin,omitempty"`
	MsgId           int64  `protobuf:"varint,6,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // msg identify
	MsgSeq          int64  `protobuf:"varint,7,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`
	Timestamp       int64  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TimestampArrive int64  `protobuf:"varint,9,opt,name=timestamp_arrive,json=timestampArrive,proto3" json:"timestamp_arrive,omitempty"`
	TimeoutWait     int64  `protobuf:"varint,10,opt,name=timeout_wait,json=timeoutWait,proto3" json:"timeout_wait,omitempty"`
}

func (x *PB_MSG_INTER_MSG) Reset() {
	*x = PB_MSG_INTER_MSG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_MSG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_MSG) ProtoMessage() {}

func (x *PB_MSG_INTER_MSG) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_MSG.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_MSG) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{17}
}

func (x *PB_MSG_INTER_MSG) GetSrvUuidFrom() int64 {
	if x != nil {
		return x.SrvUuidFrom
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetSrvUuidTo() int64 {
	if x != nil {
		return x.SrvUuidTo
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetMsgBin() []byte {
	if x != nil {
		return x.MsgBin
	}
	return nil
}

func (x *PB_MSG_INTER_MSG) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetTimestampArrive() int64 {
	if x != nil {
		return x.TimestampArrive
	}
	return 0
}

func (x *PB_MSG_INTER_MSG) GetTimeoutWait() int64 {
	if x != nil {
		return x.TimeoutWait
	}
	return 0
}

type PB_MSG_INTER_MSG_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuidFrom     int64            `protobuf:"varint,1,opt,name=srv_uuid_from,json=srvUuidFrom,proto3" json:"srv_uuid_from,omitempty"`
	SrvUuidTo       int64            `protobuf:"varint,2,opt,name=srv_uuid_to,json=srvUuidTo,proto3" json:"srv_uuid_to,omitempty"`
	SrvType         int32            `protobuf:"varint,3,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
	MsgType         int32            `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	MsgBin          []byte           `protobuf:"bytes,5,opt,name=msg_bin,json=msgBin,proto3" json:"msg_bin,omitempty"`
	MsgId           int64            `protobuf:"varint,6,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // msg identify
	MsgSeq          int64            `protobuf:"varint,7,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`
	Timestamp       int64            `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TimestampArrive int64            `protobuf:"varint,9,opt,name=timestamp_arrive,json=timestampArrive,proto3" json:"timestamp_arrive,omitempty"`
	TimeoutWait     int64            `protobuf:"varint,10,opt,name=timeout_wait,json=timeoutWait,proto3" json:"timeout_wait,omitempty"`
	Res             PB_RESPONSE_CODE `protobuf:"varint,11,opt,name=res,proto3,enum=msgpacket.PB_RESPONSE_CODE" json:"res,omitempty"`
}

func (x *PB_MSG_INTER_MSG_RES) Reset() {
	*x = PB_MSG_INTER_MSG_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_MSG_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_MSG_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_MSG_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_MSG_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_MSG_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{18}
}

func (x *PB_MSG_INTER_MSG_RES) GetSrvUuidFrom() int64 {
	if x != nil {
		return x.SrvUuidFrom
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetSrvUuidTo() int64 {
	if x != nil {
		return x.SrvUuidTo
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetMsgBin() []byte {
	if x != nil {
		return x.MsgBin
	}
	return nil
}

func (x *PB_MSG_INTER_MSG_RES) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetMsgSeq() int64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetTimestampArrive() int64 {
	if x != nil {
		return x.TimestampArrive
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetTimeoutWait() int64 {
	if x != nil {
		return x.TimeoutWait
	}
	return 0
}

func (x *PB_MSG_INTER_MSG_RES) GetRes() PB_RESPONSE_CODE {
	if x != nil {
		return x.Res
	}
	return PB_RESPONSE_CODE_PB_RESPONSE_CODE_Fail
}

// client srv register to msg que srv
type PB_MSG_INTER_CLISRV_REG_TO_QUE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuid int64 `protobuf:"varint,1,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
	SrvType int32 `protobuf:"varint,2,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE) Reset() {
	*x = PB_MSG_INTER_CLISRV_REG_TO_QUE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_CLISRV_REG_TO_QUE) ProtoMessage() {}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_CLISRV_REG_TO_QUE.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_CLISRV_REG_TO_QUE) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{19}
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

type PB_MSG_INTER_CLISRV_REG_TO_QUE_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuid     int64            `protobuf:"varint,1,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
	SrvType     int32            `protobuf:"varint,2,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
	AllSrv      *PB_SRV_INFO_ALL `protobuf:"bytes,3,opt,name=all_srv,json=allSrv,proto3" json:"all_srv,omitempty"`
	LocalAllSrv *PB_SRV_INFO_ALL `protobuf:"bytes,4,opt,name=local_all_srv,json=localAllSrv,proto3" json:"local_all_srv,omitempty"`
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) Reset() {
	*x = PB_MSG_INTER_CLISRV_REG_TO_QUE_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_CLISRV_REG_TO_QUE_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{20}
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) GetAllSrv() *PB_SRV_INFO_ALL {
	if x != nil {
		return x.AllSrv
	}
	return nil
}

func (x *PB_MSG_INTER_CLISRV_REG_TO_QUE_RES) GetLocalAllSrv() *PB_SRV_INFO_ALL {
	if x != nil {
		return x.LocalAllSrv
	}
	return nil
}

// msg que srv report local client srv to the other msg que server
type PB_MSG_INTER_QUESRV_REPORT_BROADCAST struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSrvId    int64            `protobuf:"varint,1,opt,name=que_srv_id,json=queSrvId,proto3" json:"que_srv_id,omitempty"`
	LocalAllSrv *PB_SRV_INFO_ALL `protobuf:"bytes,2,opt,name=local_all_srv,json=localAllSrv,proto3" json:"local_all_srv,omitempty"`
	AllSrv      *PB_SRV_INFO_ALL `protobuf:"bytes,3,opt,name=all_srv,json=allSrv,proto3" json:"all_srv,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_REPORT_BROADCAST) Reset() {
	*x = PB_MSG_INTER_QUESRV_REPORT_BROADCAST{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_REPORT_BROADCAST) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_REPORT_BROADCAST) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_REPORT_BROADCAST) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_REPORT_BROADCAST.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_REPORT_BROADCAST) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{21}
}

func (x *PB_MSG_INTER_QUESRV_REPORT_BROADCAST) GetQueSrvId() int64 {
	if x != nil {
		return x.QueSrvId
	}
	return 0
}

func (x *PB_MSG_INTER_QUESRV_REPORT_BROADCAST) GetLocalAllSrv() *PB_SRV_INFO_ALL {
	if x != nil {
		return x.LocalAllSrv
	}
	return nil
}

func (x *PB_MSG_INTER_QUESRV_REPORT_BROADCAST) GetAllSrv() *PB_SRV_INFO_ALL {
	if x != nil {
		return x.AllSrv
	}
	return nil
}

// msg que server notify
type PB_MSG_INTER_QUESRV_NTF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineOffline *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf `protobuf:"bytes,1,opt,name=online_offline,json=onlineOffline,proto3,oneof" json:"online_offline,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_NTF) Reset() {
	*x = PB_MSG_INTER_QUESRV_NTF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_NTF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_NTF) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_NTF) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_NTF.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_NTF) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{22}
}

func (x *PB_MSG_INTER_QUESRV_NTF) GetOnlineOffline() *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf {
	if x != nil {
		return x.OnlineOffline
	}
	return nil
}

// get que srv get type
type PB_MSG_INTER_QUESRV_GET_SRVTYPE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvType int32 `protobuf:"varint,1,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE) Reset() {
	*x = PB_MSG_INTER_QUESRV_GET_SRVTYPE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_GET_SRVTYPE) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_GET_SRVTYPE.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_GET_SRVTYPE) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{23}
}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

type PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvType   int32              `protobuf:"varint,1,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
	ArrarySrv []*PB_SRV_INFO_ONE `protobuf:"bytes,2,rep,name=arrary_srv,json=arrarySrv,proto3" json:"arrary_srv,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES) Reset() {
	*x = PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{24}
}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

func (x *PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES) GetArrarySrv() []*PB_SRV_INFO_ONE {
	if x != nil {
		return x.ArrarySrv
	}
	return nil
}

type PB_MSG_CENTERSRV_GAMESRV_GETINFO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO) Reset() {
	*x = PB_MSG_CENTERSRV_GAMESRV_GETINFO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_CENTERSRV_GAMESRV_GETINFO) ProtoMessage() {}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_CENTERSRV_GAMESRV_GETINFO.ProtoReflect.Descriptor instead.
func (*PB_MSG_CENTERSRV_GAMESRV_GETINFO) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{25}
}

type PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutIp   string `protobuf:"bytes,1,opt,name=out_ip,json=outIp,proto3" json:"out_ip,omitempty"`
	OutPort int32  `protobuf:"varint,2,opt,name=out_port,json=outPort,proto3" json:"out_port,omitempty"`
}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES) Reset() {
	*x = PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES) ProtoMessage() {}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES.ProtoReflect.Descriptor instead.
func (*PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{26}
}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES) GetOutIp() string {
	if x != nil {
		return x.OutIp
	}
	return ""
}

func (x *PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES) GetOutPort() int32 {
	if x != nil {
		return x.OutPort
	}
	return 0
}

type PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvUuid  int64 `protobuf:"varint,1,opt,name=srv_uuid,json=srvUuid,proto3" json:"srv_uuid,omitempty"`
	SrvType  int32 `protobuf:"varint,2,opt,name=srv_type,json=srvType,proto3" json:"srv_type,omitempty"`
	IsOnLine bool  `protobuf:"varint,3,opt,name=is_on_line,json=isOnLine,proto3" json:"is_on_line,omitempty"`
}

func (x *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) Reset() {
	*x = PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msginter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) ProtoMessage() {}

func (x *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) ProtoReflect() protoreflect.Message {
	mi := &file_msginter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf.ProtoReflect.Descriptor instead.
func (*PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) Descriptor() ([]byte, []int) {
	return file_msginter_proto_rawDescGZIP(), []int{22, 0}
}

func (x *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) GetSrvUuid() int64 {
	if x != nil {
		return x.SrvUuid
	}
	return 0
}

func (x *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) GetSrvType() int32 {
	if x != nil {
		return x.SrvType
	}
	return 0
}

func (x *PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf) GetIsOnLine() bool {
	if x != nil {
		return x.IsOnLine
	}
	return false
}

var File_msginter_proto protoreflect.FileDescriptor

var file_msginter_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x0c, 0x6d, 0x73, 0x67,
	0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x0f, 0x50, 0x42, 0x5f,
	0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x4f, 0x4e, 0x45, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x76, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x4a, 0x0a, 0x0f, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x73,
	0x72, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x5f, 0x4f, 0x4e, 0x45, 0x52, 0x08, 0x61, 0x72, 0x72, 0x61, 0x79, 0x53, 0x72, 0x76, 0x22, 0xa3,
	0x01, 0x0a, 0x1f, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x51, 0x55, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c,
	0x6c, 0x5f, 0x73, 0x72, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73,
	0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6c,
	0x6c, 0x53, 0x72, 0x76, 0x22, 0x5c, 0x0a, 0x18, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x23, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x45, 0x0a, 0x0c, 0x71, 0x75,
	0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f,
	0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64, 0x22,
	0x42, 0x0a, 0x22, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x51, 0x55, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e,
	0x45, 0x5f, 0x4e, 0x54, 0x46, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72,
	0x76, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x21, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x4e,
	0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4e, 0x54, 0x46, 0x12, 0x45, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x5f,
	0x73, 0x72, 0x76, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x7b, 0x0a, 0x1b, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x12, 0x1c,
	0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x72, 0x76, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x52,
	0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x72, 0x76, 0x22, 0x7f, 0x0a, 0x1f,
	0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45,
	0x53, 0x52, 0x56, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12,
	0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64, 0x12, 0x3e, 0x0a,
	0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x72, 0x76, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x4c, 0x4c,
	0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x72, 0x76, 0x22, 0x40, 0x0a,
	0x20, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55,
	0x45, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41,
	0x54, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64, 0x22,
	0x44, 0x0a, 0x24, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x51, 0x55, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42,
	0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73,
	0x72, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x53, 0x72, 0x76, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x1d, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x48, 0x45, 0x41,
	0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53,
	0x72, 0x76, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x21, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x48, 0x45, 0x41, 0x52,
	0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65,
	0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71,
	0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x25, 0x50, 0x42, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x49, 0x53, 0x52, 0x56, 0x5f, 0x52,
	0x45, 0x47, 0x5f, 0x4d, 0x53, 0x47, 0x51, 0x55, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x29, 0x50, 0x42, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x49, 0x53, 0x52, 0x56, 0x5f, 0x52,
	0x45, 0x47, 0x5f, 0x4d, 0x53, 0x47, 0x51, 0x55, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52,
	0x5f, 0x52, 0x45, 0x53, 0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x03,
	0x72, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a,
	0x71, 0x75, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x75,
	0x65, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x71, 0x75, 0x65, 0x53, 0x72, 0x76, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x3a, 0x0a, 0x1d,
	0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x49,
	0x53, 0x52, 0x56, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x21, 0x50, 0x42, 0x5f, 0x4d,
	0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x49, 0x53, 0x52, 0x56, 0x5f,
	0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x22, 0xc1, 0x02, 0x0a, 0x10, 0x50, 0x42, 0x5f,
	0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x53, 0x47, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x54,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x62,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x42, 0x69, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x29,
	0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x57, 0x61, 0x69, 0x74, 0x22, 0xf4, 0x02, 0x0a,
	0x14, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x72,
	0x76, 0x55, 0x75, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x72, 0x76,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x76,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x6d, 0x73, 0x67, 0x42, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x03,
	0x72, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x1e, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x49, 0x53, 0x52, 0x56, 0x5f, 0x52, 0x45, 0x47, 0x5f, 0x54,
	0x4f, 0x5f, 0x51, 0x55, 0x45, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x76, 0x54, 0x79, 0x70, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x22,
	0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x49,
	0x53, 0x52, 0x56, 0x5f, 0x52, 0x45, 0x47, 0x5f, 0x54, 0x4f, 0x5f, 0x51, 0x55, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x72, 0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x72, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x5f,
	0x73, 0x72, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x52, 0x06, 0x61, 0x6c, 0x6c, 0x53, 0x72, 0x76, 0x12, 0x3e, 0x0a,
	0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x72, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x4c, 0x4c,
	0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x72, 0x76, 0x22, 0xb9, 0x01,
	0x0a, 0x24, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51,
	0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x52, 0x4f,
	0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x12, 0x1c, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x5f, 0x73, 0x72,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x65, 0x53,
	0x72, 0x76, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c,
	0x6c, 0x5f, 0x73, 0x72, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73,
	0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x4c, 0x4c, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6c,
	0x6c, 0x53, 0x72, 0x76, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x72, 0x76, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x4c,
	0x4c, 0x52, 0x06, 0x61, 0x6c, 0x6c, 0x53, 0x72, 0x76, 0x22, 0xf9, 0x01, 0x0a, 0x17, 0x50, 0x42,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52,
	0x56, 0x5f, 0x4e, 0x54, 0x46, 0x12, 0x61, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x4e, 0x54,
	0x46, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x6e, 0x74, 0x66, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x68, 0x0a, 0x12, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x74, 0x66, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x72, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x76,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x4c, 0x69,
	0x6e, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x3c, 0x0a, 0x1f, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x47, 0x45, 0x54,
	0x5f, 0x53, 0x52, 0x56, 0x54, 0x59, 0x50, 0x45, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x76, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x76, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x23, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x53,
	0x52, 0x56, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72,
	0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72,
	0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x72, 0x72, 0x61, 0x72, 0x79, 0x5f,
	0x73, 0x72, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x42, 0x5f, 0x53, 0x52, 0x56, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x4f, 0x4e, 0x45, 0x52, 0x09, 0x61, 0x72, 0x72, 0x61, 0x72, 0x79, 0x53, 0x72, 0x76,
	0x22, 0x22, 0x0a, 0x20, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45,
	0x52, 0x53, 0x52, 0x56, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x56, 0x5f, 0x47, 0x45, 0x54,
	0x49, 0x4e, 0x46, 0x4f, 0x22, 0x58, 0x0a, 0x24, 0x50, 0x42, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x43,
	0x45, 0x4e, 0x54, 0x45, 0x52, 0x53, 0x52, 0x56, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x52, 0x56,
	0x5f, 0x47, 0x45, 0x54, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x75,
	0x74, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x0e,
	0x5a, 0x0c, 0x2e, 0x2f, 0x3b, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msginter_proto_rawDescOnce sync.Once
	file_msginter_proto_rawDescData = file_msginter_proto_rawDesc
)

func file_msginter_proto_rawDescGZIP() []byte {
	file_msginter_proto_rawDescOnce.Do(func() {
		file_msginter_proto_rawDescData = protoimpl.X.CompressGZIP(file_msginter_proto_rawDescData)
	})
	return file_msginter_proto_rawDescData
}

var file_msginter_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_msginter_proto_goTypes = []interface{}{
	(*PB_SRV_INFO_ONE)(nil),                           // 0: msgpacket.PB_SRV_INFO_ONE
	(*PB_SRV_INFO_ALL)(nil),                           // 1: msgpacket.PB_SRV_INFO_ALL
	(*PB_MSG_INTER_QUECENTER_REGISTER)(nil),           // 2: msgpacket.PB_MSG_INTER_QUECENTER_REGISTER
	(*PB_MSG_INTER_QUESRV_INFO)(nil),                  // 3: msgpacket.PB_MSG_INTER_QUESRV_INFO
	(*PB_MSG_INTER_QUECENTER_REGISTER_RES)(nil),       // 4: msgpacket.PB_MSG_INTER_QUECENTER_REGISTER_RES
	(*PB_MSG_INTER_QUECENTER_OFFLINE_NTF)(nil),        // 5: msgpacket.PB_MSG_INTER_QUECENTER_OFFLINE_NTF
	(*PB_MSG_INTER_QUECENTER_ONLINE_NTF)(nil),         // 6: msgpacket.PB_MSG_INTER_QUECENTER_ONLINE_NTF
	(*PB_MSG_INTER_QUESRV_CONNECT)(nil),               // 7: msgpacket.PB_MSG_INTER_QUESRV_CONNECT
	(*PB_MSG_INTER_QUESRV_CONNECT_RES)(nil),           // 8: msgpacket.PB_MSG_INTER_QUESRV_CONNECT_RES
	(*PB_MSG_INTER_QUECENTER_HEARTBEAT)(nil),          // 9: msgpacket.PB_MSG_INTER_QUECENTER_HEARTBEAT
	(*PB_MSG_INTER_QUECENTER_HEARTBEAT_RES)(nil),      // 10: msgpacket.PB_MSG_INTER_QUECENTER_HEARTBEAT_RES
	(*PB_MSG_INTER_QUESRV_HEARTBEAT)(nil),             // 11: msgpacket.PB_MSG_INTER_QUESRV_HEARTBEAT
	(*PB_MSG_INTER_QUESRV_HEARTBEAT_RES)(nil),         // 12: msgpacket.PB_MSG_INTER_QUESRV_HEARTBEAT_RES
	(*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER)(nil),     // 13: msgpacket.PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER
	(*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES)(nil), // 14: msgpacket.PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES
	(*PB_MSG_INTER_CLISRV_HEARTBEAT)(nil),             // 15: msgpacket.PB_MSG_INTER_CLISRV_HEARTBEAT
	(*PB_MSG_INTER_CLISRV_HEARTBEAT_RES)(nil),         // 16: msgpacket.PB_MSG_INTER_CLISRV_HEARTBEAT_RES
	(*PB_MSG_INTER_MSG)(nil),                          // 17: msgpacket.PB_MSG_INTER_MSG
	(*PB_MSG_INTER_MSG_RES)(nil),                      // 18: msgpacket.PB_MSG_INTER_MSG_RES
	(*PB_MSG_INTER_CLISRV_REG_TO_QUE)(nil),            // 19: msgpacket.PB_MSG_INTER_CLISRV_REG_TO_QUE
	(*PB_MSG_INTER_CLISRV_REG_TO_QUE_RES)(nil),        // 20: msgpacket.PB_MSG_INTER_CLISRV_REG_TO_QUE_RES
	(*PB_MSG_INTER_QUESRV_REPORT_BROADCAST)(nil),      // 21: msgpacket.PB_MSG_INTER_QUESRV_REPORT_BROADCAST
	(*PB_MSG_INTER_QUESRV_NTF)(nil),                   // 22: msgpacket.PB_MSG_INTER_QUESRV_NTF
	(*PB_MSG_INTER_QUESRV_GET_SRVTYPE)(nil),           // 23: msgpacket.PB_MSG_INTER_QUESRV_GET_SRVTYPE
	(*PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES)(nil),       // 24: msgpacket.PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES
	(*PB_MSG_CENTERSRV_GAMESRV_GETINFO)(nil),          // 25: msgpacket.PB_MSG_CENTERSRV_GAMESRV_GETINFO
	(*PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES)(nil),      // 26: msgpacket.PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES
	(*PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf)(nil),   // 27: msgpacket.PB_MSG_INTER_QUESRV_NTF.online_offline_ntf
	(PB_RESPONSE_CODE)(0),                             // 28: msgpacket.PB_RESPONSE_CODE
}
var file_msginter_proto_depIdxs = []int32{
	0,  // 0: msgpacket.PB_SRV_INFO_ALL.array_srv:type_name -> msgpacket.PB_SRV_INFO_ONE
	1,  // 1: msgpacket.PB_MSG_INTER_QUECENTER_REGISTER.local_all_srv:type_name -> msgpacket.PB_SRV_INFO_ALL
	3,  // 2: msgpacket.PB_MSG_INTER_QUECENTER_REGISTER_RES.que_srv_info:type_name -> msgpacket.PB_MSG_INTER_QUESRV_INFO
	3,  // 3: msgpacket.PB_MSG_INTER_QUECENTER_ONLINE_NTF.que_srv_info:type_name -> msgpacket.PB_MSG_INTER_QUESRV_INFO
	1,  // 4: msgpacket.PB_MSG_INTER_QUESRV_CONNECT.local_all_srv:type_name -> msgpacket.PB_SRV_INFO_ALL
	1,  // 5: msgpacket.PB_MSG_INTER_QUESRV_CONNECT_RES.local_all_srv:type_name -> msgpacket.PB_SRV_INFO_ALL
	28, // 6: msgpacket.PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES.res:type_name -> msgpacket.PB_RESPONSE_CODE
	28, // 7: msgpacket.PB_MSG_INTER_MSG_RES.res:type_name -> msgpacket.PB_RESPONSE_CODE
	1,  // 8: msgpacket.PB_MSG_INTER_CLISRV_REG_TO_QUE_RES.all_srv:type_name -> msgpacket.PB_SRV_INFO_ALL
	1,  // 9: msgpacket.PB_MSG_INTER_CLISRV_REG_TO_QUE_RES.local_all_srv:type_name -> msgpacket.PB_SRV_INFO_ALL
	1,  // 10: msgpacket.PB_MSG_INTER_QUESRV_REPORT_BROADCAST.local_all_srv:type_name -> msgpacket.PB_SRV_INFO_ALL
	1,  // 11: msgpacket.PB_MSG_INTER_QUESRV_REPORT_BROADCAST.all_srv:type_name -> msgpacket.PB_SRV_INFO_ALL
	27, // 12: msgpacket.PB_MSG_INTER_QUESRV_NTF.online_offline:type_name -> msgpacket.PB_MSG_INTER_QUESRV_NTF.online_offline_ntf
	0,  // 13: msgpacket.PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES.arrary_srv:type_name -> msgpacket.PB_SRV_INFO_ONE
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_msginter_proto_init() }
func file_msginter_proto_init() {
	if File_msginter_proto != nil {
		return
	}
	file_msgdef_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_msginter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_SRV_INFO_ONE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_SRV_INFO_ALL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUECENTER_REGISTER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_INFO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUECENTER_REGISTER_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUECENTER_OFFLINE_NTF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUECENTER_ONLINE_NTF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_CONNECT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_CONNECT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUECENTER_HEARTBEAT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUECENTER_HEARTBEAT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_HEARTBEAT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_HEARTBEAT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_CLISRV_REG_MSGQUE_CENTER_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_CLISRV_HEARTBEAT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_CLISRV_HEARTBEAT_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_MSG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_MSG_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_CLISRV_REG_TO_QUE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_CLISRV_REG_TO_QUE_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_REPORT_BROADCAST); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_NTF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_GET_SRVTYPE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_GET_SRVTYPE_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_CENTERSRV_GAMESRV_GETINFO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_CENTERSRV_GAMESRV_GETINFO_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msginter_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PB_MSG_INTER_QUESRV_NTFOnlineOfflineNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_msginter_proto_msgTypes[22].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msginter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msginter_proto_goTypes,
		DependencyIndexes: file_msginter_proto_depIdxs,
		MessageInfos:      file_msginter_proto_msgTypes,
	}.Build()
	File_msginter_proto = out.File
	file_msginter_proto_rawDesc = nil
	file_msginter_proto_goTypes = nil
	file_msginter_proto_depIdxs = nil
}
